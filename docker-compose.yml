services:
  app:
    container_name: cavnas_ai_app
    image: node:20
    volumes:
      - ./:/app
    working_dir: /app
    ports:
      - 5556:5556
      # - 24678:24678
    entrypoint: sh
    command: |
      -c "
        cd /app
        npm i -g pnpm
        pnpm install
        pnpm run dev --host
      "
  trpc:
    container_name: cavnas_ai_trpc
    build:
      context: .
      dockerfile: docker/server.Dockerfile
    volumes:
      - ./:/app
      - live_project:/live_project
    environment:
      - GH_TOKEN=${GH_TOKEN} # get from `gh auth token`
      - POSTGRES_USER=canvasuser
      - POSTGRES_PASSWORD=3498h2b79171bp0sdnfaon38
      - POSTGRES_DB=canvasgrader
      - POSTGRES_HOST=canvas_ai_postgres
    working_dir: /app
    network_mode: service:app

  # sandbox container for running code 1 at a time (maybe should have dynamically spawn?)
  #    dependencies: pnpm, uvx, dotnet, docker in docker?
  # playwright container with network attached to sandbox container, running mcp server over http streaming...
  #    use novnc to connect, alternatively apache guacamole
  #    depends on which one works better embedded in the web
  playwright_mcp:
    container_name: canvas_ai_playwright
    build:
      context: .
      dockerfile: docker/playwright.Dockerfile
    # restart: always
    ports:
      - 3901:3901
      # - 5900:5900

  playwright_novnc:
    build:
      context: .
      dockerfile: docker/novnc.Dockerfile
    container_name: playwrite_novnc
    ports:
      - 3903:3903
    depends_on:
      - playwright_mcp
    command: >
      websockify --web=/opt/novnc --wrap-mode=ignore 3903 playwright_mcp:5900

  sandbox:
    container_name: canvas_ai_sandbox
    build:
      context: .
      dockerfile: docker/sandbox.Dockerfile
    privileged: true
    network_mode: service:playwright_mcp
    depends_on:
      - playwright_mcp
    volumes:
      - live_project:/live_project

  postgres:
    container_name: canvas_ai_postgres
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=canvasuser
      - POSTGRES_PASSWORD=3498h2b79171bp0sdnfaon38
      - POSTGRES_DB=canvasgrader
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U canvasuser -d canvasgrader"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  live_project:
  postgres_data:
